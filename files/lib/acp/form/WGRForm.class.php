<?php// wcf importsrequire_once(WCF_DIR.'lib/acp/form/ACPForm.class.php');/** * WoW Guild Recruitment ACP Form * * @author r15ch13 * @version 1.0 */	class WGRForm extends ACPForm {	public $templateName = 'wgrIndex';	private $options = array();	private $classes = array();		private $optionsCache = array();	private $classesCache = array();		private $values = array();	private $data = array();		private $debug = false;		/**	 * @see Form::readData()	 */	public function readData() {		parent::readData();				// create cache		WCF::getCache()->addResource('wgrOptions', WBB_DIR.'cache/cache.wgrOptions.php', WBB_DIR.'lib/system/cache/CacheBuilderWGROptions.class.php');		WCF::getCache()->addResource('wgrClasses', WBB_DIR.'cache/cache.wgrClasses.php', WBB_DIR.'lib/system/cache/CacheBuilderWGRClasses.class.php');				WCF::getCache()->clearResource('wgrOptions');		WCF::getCache()->clear(WBB_DIR . 'cache/', 'cache.wgrOptions.php');				WCF::getCache()->clearResource('wgrClasses');		WCF::getCache()->clear(WBB_DIR . 'cache/', 'cache.wgrClasses.php');				// read cache		$this->optionsCache = WCF::getCache()->get('wgrOptions');		$this->classesCache = WCF::getCache()->get('wgrClasses');				$this->readOptions();		$this->readClasses(); 	}	// reads options	protected function readOptions() {		foreach ($this->optionsCache as $optionsData) {			$this->options[$optionsData['option_name']] = $optionsData;					}	}	// reads classes	protected function readClasses() {		foreach ($this->classesCache as $classesData) {			$this->classes[] = $classesData;		}	}	/**	 * @see Form::assignVariables()	 */	public function assignVariables() {		parent::assignVariables();				$this->canEditRecruitment();				if(!empty($this->classes_on)) {			WCF::getTPL()->assign('classes_on', $this->classes_on);		} else {			WCF::getTPL()->assign('classes_on', '');		}		if(!empty($this->classes_skill)) {			WCF::getTPL()->assign('classes_skill', $this->classes_skill);		} else {			WCF::getTPL()->assign('classes_skill', '');		}		if(!empty($this->option_on)) {			WCF::getTPL()->assign('option_on', $this->option_on);		} else {			WCF::getTPL()->assign('option_on', '');		}		if(!empty($this->option_color)) {			WCF::getTPL()->assign('option_color', $this->option_color);		} else {			WCF::getTPL()->assign('option_color', '');		}		WCF::getTPL()->assign(array(					'options' => $this->options,					'classes' => $this->classes			));			//echo "<pre>".print_r($this->options, true)."</pre>";			//echo "<pre>".print_r($this->classes, true)."</pre>";		WCF::getTPL()->assign('debug', $this->debug);	}		/**	 * @see Form::readFormParameters()	 */	public function readFormParameters() {		parent::readFormParameters();		if(!empty($_POST['classes_on'])) $this->classes_on = $_POST['classes_on'];		if(!empty($_POST['classes_skill'])) $this->classes_skill = $_POST['classes_skill'];		if(!empty($_POST['option_on'])) $this->option_on = $_POST['option_on'];		if(!empty($_POST['option_color'])) $this->option_color = $_POST['option_color'];		if(isset($this->option_color['portal_wgr_ucolor'])) {			if(empty($this->option_color['portal_wgr_ucolor'])) {				unset($this->option_on['portal_wgr_ucolor']);				unset($this->option_on['portal_wgr_ccolor']);			}		}				if(!isset($this->option_on['portal_wgr_ccolor'])) {			unset($this->option_color['portal_wgr_ucolor']);			unset($this->option_on['portal_wgr_ccolor']);		}	}			/**	 * @see Form::save()	 */	public function save() {		parent::save();		if($this->saved == true) {						$sql = "SELECT						`option_name`,						`option_color`,						`option_onoff`					FROM `wcf".WCF_N."_portal_wgr_options`;";			$result = WCF::getDB()->sendQuery($sql);			while ($row = WCF::getDB()->fetchArray($result)) {				$optiondata[] = $row;			}			foreach($optiondata as $key => $value){				$sql = "UPDATE `wcf".WCF_N."_portal_wgr_options`						SET `option_color` = '', `option_onoff` = '0'						WHERE `wcf".WCF_N."_portal_wgr_options`.`option_name` = '".$value['option_name']."';";				WCF::getDB()->sendQuery($sql);			}						if(isset($this->option_on)) {								foreach($this->option_on as $key => $value){					$sql = "UPDATE `wcf".WCF_N."_portal_wgr_options`							SET `option_onoff` = '".$value."'							WHERE `wcf".WCF_N."_portal_wgr_options`.`option_name` = '".$key."';";					WCF::getDB()->sendQuery($sql);				}			}			if(isset($this->option_color)) {				foreach($this->option_color as $key => $value){					$sql = "UPDATE `wcf".WCF_N."_portal_wgr_options`							SET `option_color` = '".$value."'							WHERE `wcf".WCF_N."_portal_wgr_options`.`option_name` = '".$key."';";					WCF::getDB()->sendQuery($sql);				}			}			$sql = "SELECT						`class_name`,						`class_onoff_1`,						`class_onoff_2`,						`class_onoff_3`,						`class_skill_1`,						`class_skill_2`,						`class_skill_3`					FROM `wcf".WCF_N."_portal_wgr_classes`;";			$result = WCF::getDB()->sendQuery($sql);			while ($row = WCF::getDB()->fetchArray($result)) {				$data[] = $row;			}			foreach($data as $key => $value){				$sql = "UPDATE `wcf".WCF_N."_portal_wgr_classes`						SET `class_onoff_1` = '0', `class_onoff_2` = '0', `class_onoff_3` = '0'						WHERE `wcf".WCF_N."_portal_wgr_classes`.`class_name` = '".$value['class_name']."';";				WCF::getDB()->sendQuery($sql);			}			foreach($data as $key => $value){				$sql = "UPDATE `wcf".WCF_N."_portal_wgr_classes`						SET `class_skill_1` = '0', `class_skill_2` = '0', `class_skill_3` = '0'						WHERE `wcf".WCF_N."_portal_wgr_classes`.`class_name` = '".$value['class_name']."';";				WCF::getDB()->sendQuery($sql);			}						if(isset($this->classes_on)) {				foreach($this->classes_on as $key => $value){					$new = array(						isset($value['s1']) ? "`class_onoff_1` = '".$value['s1']."'" : "`class_onoff_1` = '0'",						isset($value['s2']) ? "`class_onoff_2` = '".$value['s2']."'" : "`class_onoff_2` = '0'",						isset($value['s3']) ? "`class_onoff_3` = '".$value['s3']."'" : "`class_onoff_3` = '0'"					);					$set = implode($new, ', ');					$sql= "UPDATE `wcf".WCF_N."_portal_wgr_classes` SET ".$set." WHERE `wcf".WCF_N."_portal_wgr_classes`.`class_name` = '".$key."';";					WCF::getDB()->sendQuery($sql);				}			}						if(isset($this->classes_skill)) {				foreach($this->classes_skill as $key => $value){					$new = array(						isset($value['s1']) ? "`class_skill_1` = '".$value['s1']."'" : "`class_skill_1` = '0'",						isset($value['s2']) ? "`class_skill_2` = '".$value['s2']."'" : "`class_skill_2` = '0'",						isset($value['s3']) ? "`class_skill_3` = '".$value['s3']."'" : "`class_skill_3` = '0'"					);					$set = implode($new, ', ');					$sql= "UPDATE `wcf".WCF_N."_portal_wgr_classes` SET ".$set." WHERE `wcf".WCF_N."_portal_wgr_classes`.`class_name` = '".$key."';";					WCF::getDB()->sendQuery($sql);				}			}					}	}	/**	 * @see Form::validate()	 */	public function validate() {		parent::validate();			if(isset($this->classes_skill)) {			foreach($this->classes_skill as $key => $value){				$this->classes_skill[$key]['s1'] = !empty($this->classes_skill[$key]['s1']) ? $this->classes_skill[$key]['s1'] : false;				$this->classes_skill[$key]['s2'] = !empty($this->classes_skill[$key]['s2']) ? $this->classes_skill[$key]['s2'] : false;				$this->classes_skill[$key]['s3'] = !empty($this->classes_skill[$key]['s3']) ? $this->classes_skill[$key]['s3'] : false;								if(!isset($this->classes_on[$key]['s1'])) unset($this->classes_skill[$key]['s1']);				if(!isset($this->classes_on[$key]['s2'])) unset($this->classes_skill[$key]['s2']);				if(!isset($this->classes_on[$key]['s3'])) unset($this->classes_skill[$key]['s3']);								if(empty($this->classes_skill[$key]['s1'])) unset($this->classes_skill[$key]['s1']);				if(empty($this->classes_skill[$key]['s2'])) unset($this->classes_skill[$key]['s2']);				if(empty($this->classes_skill[$key]['s3'])) unset($this->classes_skill[$key]['s3']);				if(empty($this->classes_skill[$key])) unset($this->classes_skill[$key]);			}		}				$ucolor = isset($this->option_color['portal_wgr_ucolor']) ? $this->option_color['portal_wgr_ucolor'] : false;				if(empty($ucolor)) {			$this->saved = true;		} else {			$ucolor = trim($ucolor);			$first = substr($ucolor, 0, 1);			$ucolor = $first == "#" ? substr($ucolor, 1) : $ucolor;			$pattern = '/^[0-9a-f]{3,6}$/i';			preg_match($pattern, $ucolor, $matches);						if(empty($matches)) {				$this->error = true;			} else {				$this->saved = true;				$this->option_color['portal_wgr_ucolor'] = "#".$ucolor;			}		}				WCF::getTPL()->assignByRef('saved', $this->saved);		WCF::getTPL()->assignByRef('error', $this->error);	}				/**	 * @see Form::show()	 */	public function show() {		WCFACP::getMenu()->setActiveMenuItem('wcf.acp.menu.link.content.wgr.manage');		parent::show();	}			/**	 * check if one of the users group has permission to edit recruitmentbox	 *	 * @author r15ch13	 * @return bool $canEditRecruitment	 */		protected function canEditRecruitment() {		$sql = "SELECT `groupID`				FROM `wcf".WCF_N."_user_to_groups`				WHERE `userID` = '".WCF::getUser()->userID."';";		$result = WCF::getDB()->sendQuery($sql);		while ($row = WCF::getDB()->fetchArray($result)) {			$groupID[] = $row['groupID'];		}				foreach($groupID as $value) {			$sql = "SELECT `optionValue`					FROM `wcf".WCF_N."_group_option_value`					WHERE `groupid` = '".$value."' AND `optionID` = (						SELECT `optionID`						FROM `wcf1_group_option`						WHERE `optionName` = 'user.portal.canEditRecruitment'					);";			$result = WCF::getDB()->sendQuery($sql);			$row = WCF::getDB()->fetchArray($result);			$optionValue[] = $row['optionValue'];		}				if (!in_array(1, $optionValue)) {			WCF::getTPL()->assign('canEditRecruitment', true);		}	}	}?>