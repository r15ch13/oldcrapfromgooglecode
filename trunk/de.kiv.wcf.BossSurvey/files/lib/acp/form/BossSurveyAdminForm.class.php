<?php// wcf importsrequire_once(WCF_DIR.'lib/acp/form/ACPForm.class.php');class BossSurveyAdminForm extends ACPForm {	public $templateName = 'BossSurveyAdminIndex';	private $instances = array();	private $mobs = array();		private $instanceCache = array();	private $mobCache = array();		private $bossIDs = array();	private $bossProgresses = array();	private $bossKills = array();	private $bossInfoUrls = array();		//onSubmit	public function readFormParameters() {		parent::readFormParameters();				if(isset($_POST['bossSurveyMob_ID'])) $this->bossIDs = $_POST['bossSurveyMob_ID'];		if(isset($_POST['bossSurveyMob_Progress'])) $this->bossProgresses = $_POST['bossSurveyMob_Progress'];		if(isset($_POST['bossSurveyMob_Killdate'])) $this->bossKills = $_POST['bossSurveyMob_Killdate'];		if(isset($_POST['bossSurveyMob_InfoUrl'])) $this->bossInfoUrls = $_POST['bossSurveyMob_InfoUrl'];	}		//validate inputs	public function validate() {		parent::validate();					$saved = true;		WCF::getTPL()->assignByRef('saved', $saved);	}		//dont work?	public function save() {		parent::save();				foreach($this->bossIDs as $key => $bossID){			$sql = "UPDATE wcf".WCF_N."_bosssurvey_mob				SET	bsm_progress = '".intval($this->bossProgresses[$key])."',					bsm_killdate = '".strtotime($this->bossKills[$key])."',					bsm_info_url = '".$this->bossInfoUrls[$key]."'				WHERE bsm_id = ".$bossID;			WCF::getDB()->sendQuery($sql);		}			}		public function assignVariables() {		parent::assignVariables();			WCF::getTPL()->assign(array(					'instances' => $this->instances,					'mobs' => $this->mobs			));	}	public function show() {		WCFACP::getMenu()->setActiveMenuItem('wcf.acp.menu.link.content.BossSurveyAdmin.manage');			parent::show();	}		public function readData() {		parent::readData();				//CACHE ANLEGEN		WCF::getCache()->addResource('bsInstance',			WCF_DIR.'cache/cache.bsInstance.php',			WCF_DIR.'lib/system/cache/CacheBuilderBossSurveyInstance.class.php');		WCF::getCache()->addResource('bsMobs',			WCF_DIR.'cache/cache.bsInstance.php',			WCF_DIR.'lib/system/cache/CacheBuilderBossSurveyMobs.class.php');				WCF::getCache()->clearResource('bsInstance');		WCF::getCache()->clear(WCF_DIR . 'cache/', 'cache.bsInstance.php');				WCF::getCache()->clearResource('bsMobs');		WCF::getCache()->clear(WCF_DIR . 'cache/', 'cache.bsMobs.php');				// Cache lesen		$this->instanceCache = WCF::getCache()->get('bsInstance');		$this->mobCache = WCF::getCache()->get('bsMobs');				$this->readInstances();		$this->readMobs();	}	// reads instances	protected function readInstances() {		foreach ($this->instanceCache as $instanceData) {			$this->instances[] = $instanceData;		}	}	protected function readMobs() {		foreach ($this->mobCache as $mobData) {			$mobData['conv_killdate'] = strftime('%d.%m.%Y', $mobData['bsm_killdate']);			$this->mobs[] = $mobData;		}	}}?>